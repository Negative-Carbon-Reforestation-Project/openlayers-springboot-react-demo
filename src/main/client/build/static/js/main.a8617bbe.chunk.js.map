{"version":3,"sources":["components/Map/MapContext.js","components/Map/useMap.js","components/Map/Map.js","components/Layers/Layers.js","components/Layers/TileLayer.js","components/Controls/Zoom.js","resources/images/layer-control-20x20.webp","resources/images/layer-control-512x512.webp","components/SideMenuContext.js","components/SideMenu.js","components/Controls/Layer.js","resources/images/dimension-control-3D.webp","resources/images/dimension-control-2D.webp","components/Controls/DimensionControl.js","resources/images/cursor-info.webp","resources/images/cursor-info-active.webp","components/Controls/QueryLocation.js","components/Controls/Controls.js","resources/images/ncrp-logo-192x96.webp","resources/images/ncrp-logo-205x103.webp","resources/images/ncrp-logo-208x104.webp","resources/images/ncrp-logo-320x160.webp","resources/images/ncrp-logo-600x300.webp","components/Logo.js","components/Footer.js","components/Overlays/Overlays.js","components/Overlays/usePopup.js","components/Overlays/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["MapContext","React","createContext","useMap","zoom","center","mapRef","useRef","useState","map","setMap","cesiumMap","setCesiumMap","isQueryable","setQueryable","useEffect","options","view","ol","layers","controls","overlays","mapObject","setTarget","current","undefined","getView","setZoom","setCenter","OLCesium","Map","children","style","cursor","Provider","value","ref","className","Layers","TileLayer","source","zIndex","preload","opacity","visible","useContext","tileLayer","OLTileLayer","addLayer","removeLayer","ZoomControl","target","zoomControl","Zoom","zoomInClassName","zoomOutClassName","push","remove","SideMenuContext","SideMenu","layerMenuRef","sideMenuRef","toggleLayer","event","layerIndex","Number","getAttribute","getLayers","isLayerVisible","item","getVisible","setVisible","console","log","onClick","display","LayerControl","toggleDisplay","toggleLayerMenu","src","layerIcon20","alt","DimensionControl","iconRef","setEnabled","getEnabled","twoDimensional","threeDimensional","QueryLocationControl","controlActive","setControlActive","cursorIconActive","cursorIcon","Controls","controlBarRef","Layer","QueryLocation","Logo","type","media","srcSet","logo192","sizes","logo205","logo208","logo320","logo600","Footer","Overlays","usePopup","popupRef","popupCloseButtonRef","popupContent","setPopupContent","popupOverlay","Overlay","element","autoPan","autoPanAnimation","duration","addOverlay","onclick","setPosition","blur","on","projection","getResolution","coordinate","getSource","getFeatureInfoUrl","longLatInfo","toLonLat","removeOverlay","Popup","href","App","soilData","TileWMS","url","params","serverType","transition","waSlope","waFire","fromLonLat","OSM","Infinity","Stamen","layer","BingMaps","key","imagerySet","XYZ","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8617bbe.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n/**\r\n * React context for OpenLayer Map.\r\n * @type {React.Context<unknown>}\r\n */\r\nconst MapContext = new React.createContext();\r\n\r\nexport default MapContext;","import { useRef, useState, useEffect } from \"react\";\r\nimport * as ol from \"ol\";\r\nimport OLCesium from \"olcs/OLCesium\";\r\n\r\nconst useMap = (zoom, center) => {\r\n    const mapRef = useRef();\r\n    const [map, setMap] = useState(null);\r\n    const [cesiumMap, setCesiumMap] = useState(null);\r\n    const [isQueryable, setQueryable] = useState(false);\r\n\r\n    /**\r\n     * Once the component is mounted onto the DOM, construct a new map with the given view.\r\n     */\r\n    useEffect(() => {\r\n        let options = {\r\n            view: new ol.View({ zoom, center }),\r\n            layers: [],\r\n            controls: [],\r\n            overlays: []\r\n        };\r\n\r\n        let mapObject = new ol.Map(options);\r\n\r\n        mapObject.setTarget(mapRef.current);\r\n        setMap(mapObject);\r\n\r\n        return () => mapObject.setTarget(undefined);\r\n    }, []);\r\n\r\n    /**\r\n     * Once the component is mounted onto the DOM, set the zoom level on the map.\r\n     * If the state of zoom changes, this function is called again.\r\n     */\r\n    useEffect(() => {\r\n        if (!map)\r\n        {\r\n            return;\r\n        }\r\n\r\n        map.getView().setZoom(zoom);\r\n    }, [zoom]);\r\n\r\n    /**\r\n     * Once the component is mounted onto the DOM, center the view on the map.\r\n     * If the state of center changes, this function is called again.\r\n     */\r\n    useEffect(() => {\r\n        if (!map)\r\n        {\r\n            return;\r\n        }\r\n\r\n        map.getView().setCenter(center)\r\n    }, [center])\r\n\r\n    /**\r\n     * Once the component is mounted onto the DOM, generate the 3D cesium map.\r\n     * If the state of the map changes, this function is called again.\r\n     */\r\n    useEffect(() => {\r\n        if (!map)\r\n        {\r\n            return;\r\n        }\r\n\r\n        setCesiumMap(new OLCesium({map: map}));\r\n    }, [map])\r\n\r\n    return { mapRef, map, cesiumMap, isQueryable, setQueryable }\r\n}\r\n\r\nexport default useMap;","import React, {useEffect} from \"react\"\r\nimport MapContext from \"./MapContext\";\r\nimport useMap from \"./useMap\"\r\n\r\n/**\r\n * Container for the OpenLayer Map\r\n * @param children The child components\r\n * @param zoom Initial resolution for the view\r\n * @param center Initial center for the view\r\n * @returns {JSX.Element}\r\n */\r\nconst Map = ({ children, zoom, center }) => {\r\n    const { mapRef, map, cesiumMap, isQueryable, setQueryable } = useMap(zoom, center);\r\n\r\n    useEffect(() => {\r\n        mapRef.current.style.cursor = isQueryable ? \"help\" : \"default\";\r\n    }, [isQueryable])\r\n\r\n\r\n\r\n    return (\r\n        <MapContext.Provider value={{ map, mapRef, cesiumMap, isQueryable, setQueryable }}>\r\n            <div ref={mapRef} className=\"ol-map\">\r\n                {children}\r\n            </div>\r\n        </MapContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from \"react\";\r\n\r\n/**\r\n * Container for custom OpenLayer layers\r\n * @param children The child components\r\n * @returns {JSX.Element}\r\n */\r\nconst Layers = ({ children }) => {\r\n    return <div>{children}</div>;\r\n};\r\n\r\nexport default Layers;","import { useContext, useEffect } from \"react\";\r\nimport MapContext from \"../Map/MapContext\";\r\nimport OLTileLayer from \"ol/layer/Tile\";\r\n\r\n/**\r\n * Container for custom OpenLayer TileLayers\r\n * @param source The source image(s) for this layer.\r\n * @param zIndex The z-index for layer rendering. Determines positioning of layers, default is 0.\r\n * @param preload The tiles to be preloaded, default is 0.\r\n * @param opacity The opacity for the tile, default is 1.\r\n * @returns {null}\r\n */\r\nconst TileLayer = ({ source, zIndex = 0, preload = 0, opacity=1, visible=true}) => {\r\n    const { map } = useContext(MapContext);\r\n\r\n    /**\r\n     * Once the component is mounted onto the dom, construct a new tilelayer and append it\r\n     * to the map using the shared MapContext.\r\n     */\r\n    useEffect(() => {\r\n        if (!map)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let tileLayer = new OLTileLayer({\r\n            source,\r\n            zIndex,\r\n            preload,\r\n            opacity,\r\n            visible\r\n        });\r\n\r\n        map.addLayer(tileLayer);\r\n\r\n        return () => {\r\n            if (map)\r\n            {\r\n                map.removeLayer(tileLayer);\r\n            }\r\n        };\r\n\r\n    }, [map]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default TileLayer;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Zoom } from \"ol/control\";\r\nimport MapContext from \"../Map/MapContext\";\r\n\r\n\r\n/**\r\n * Component for custom OpenLayer zoom control.\r\n * @returns {null}\r\n */\r\nconst ZoomControl = ({target}) => {\r\n    const { map } = useContext(MapContext);\r\n\r\n    /**\r\n     * Once the component is mounted onto the DOM, extend the zoom control and append it onto the map\r\n     * using the shared MapContext. If the state of map changes, this function is called again.\r\n     */\r\n    useEffect(() => {\r\n        if (!map)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let zoomControl = new Zoom({\r\n            className: \"ol-zoom\",\r\n            zoomInClassName: \"control ol-zoom-in\",\r\n            zoomOutClassName: \"control ol-zoom-out\",\r\n            target: target.current\r\n        });\r\n\r\n        map.controls.push(zoomControl);\r\n\r\n        return () => map.controls.remove(zoomControl);\r\n    }, [map])\r\n\r\n    return null;\r\n};\r\n\r\nexport default ZoomControl;","export default __webpack_public_path__ + \"static/media/layer-control-20x20.8bddd6a6.webp\";","export default __webpack_public_path__ + \"static/media/layer-control-512x512.c5b4c42a.webp\";","import React from \"react\"\r\n\r\n/**\r\n * React context for SideMenu.\r\n * @type {React.Context<unknown>}\r\n */\r\nconst SideMenuContext = new React.createContext();\r\n\r\nexport default SideMenuContext;","import React, {useContext, useRef} from \"react\";\r\nimport {Drawer} from \"@mui/material\";\r\nimport SideMenuContext from \"./SideMenuContext\";\r\nimport MapContext from \"./Map/MapContext\";\r\nimport LayerManager from \"./LayerManager\";\r\n\r\n/**\r\n * Container for side menu\r\n */\r\nconst SideMenu = ({children}) => {\r\n    const layerMenuRef = useRef();\r\n    const sideMenuRef = useRef();\r\n    const {map} = useContext(MapContext);\r\n\r\n    const hideSideMenu = () => {\r\n        layerMenuRef.current.style.display = \"none\";\r\n        sideMenuRef.current.style.display = \"none\";\r\n    };\r\n\r\n    const toggleLayer = (event) => {\r\n        let layerIndex = Number(event.target.getAttribute(\"data-value\"));\r\n        let layers = map.getLayers();\r\n\r\n        let isLayerVisible = layers.item(layerIndex).getVisible();\r\n        layers.item(layerIndex).setVisible(!isLayerVisible);\r\n\r\n        console.log(layers.item(layerIndex));\r\n    }\r\n\r\n    return (\r\n        <SideMenuContext.Provider value={{sideMenuRef, layerMenuRef}}>\r\n            <div ref={sideMenuRef} className=\"side-menu\">\r\n                <div ref={layerMenuRef} className=\"layer-menu\">\r\n                    <section className=\"layer-menu-header\">\r\n                        <h1 className=\"layer-menu-heading\">Layers</h1>\r\n                        <button className=\"layer-menu-exit\" onClick={() => hideSideMenu()}>X</button>\r\n                    </section>\r\n\r\n                    {/*<LayerManager className=\"layer-menu-content\"/>*/}\r\n                    <section className=\"layer-menu-content\">\r\n                        <section className=\"layer-group\">\r\n                            <h2 className=\"layer-group-heading\"></h2>\r\n                            <article className=\"layer-group-content\"></article>\r\n                        </section>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={0} onClick={(event) => toggleLayer(event)}>OSM</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={1} onClick={(event) => toggleLayer(event)}>Terrain</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={2} onClick={(event) => toggleLayer(event)}>Toner</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={3} onClick={(event) => toggleLayer(event)}>Bing Maps</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={4} onClick={(event) => toggleLayer(event)}>OpenTopo</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={5} onClick={(event) => toggleLayer(event)}>Layer 1</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={6} onClick={(event) => toggleLayer(event)}>Layer 2</h2>\r\n                        </article>\r\n                        <article className=\"layer-item\">\r\n                            <h2 className=\"layer-item-heading\" data-value={7} onClick={(event) => toggleLayer(event)}>Layer 3</h2>\r\n                        </article>\r\n                    </section>\r\n                </div>\r\n\r\n            </div>\r\n            <>\r\n                {children}\r\n            </>\r\n        </SideMenuContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SideMenu;","import React, {useContext} from \"react\";\r\nimport layerIcon512 from \"../../resources/images/layer-control-512x512.webp\";\r\nimport layerIcon20 from \"../../resources/images/layer-control-20x20.webp\";\r\nimport SideMenu from \"../SideMenu\";\r\nimport SideMenuContext from \"../SideMenuContext\";\r\n\r\n/**\r\n * Container for the Layer control\r\n * @returns {JSX.Element}\r\n */\r\nconst LayerControl = () => {\r\n\r\n    const {sideMenuRef, layerMenuRef} = useContext(SideMenuContext)\r\n\r\n    /**\r\n     * Toggles the layer menu\r\n     */\r\n    const toggleLayerMenu = () => {\r\n        let currentDisplay = layerMenuRef.current.style.display;\r\n        let toggleDisplay = currentDisplay === \"block\" ? \"none\" : \"block\";\r\n\r\n        sideMenuRef.current.style.display = toggleDisplay;\r\n        layerMenuRef.current.style.display = toggleDisplay;\r\n    }\r\n\r\n    return (\r\n        <div className=\"control layer-control\" onClick={() => toggleLayerMenu()}>\r\n            <img className=\"layer-icon\" src={layerIcon20} alt=\"layer-icon\"/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default LayerControl;","export default __webpack_public_path__ + \"static/media/dimension-control-3D.665f0684.webp\";","export default __webpack_public_path__ + \"static/media/dimension-control-2D.f58c6b25.webp\";","import React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport MapContext from \"../Map/MapContext\";\r\nimport threeDimensional from \"../../resources/images/dimension-control-3D.webp\";\r\nimport twoDimensional from \"../../resources/images/dimension-control-2D.webp\";\r\n\r\n/**\r\n * Container for the DimensionControl\r\n * @returns {JSX.Element}\r\n */\r\nconst DimensionControl = () => {\r\n\r\n    const { cesiumMap } = useContext(MapContext);\r\n    const iconRef = useRef();\r\n\r\n    /***\r\n     * Toggles between the 3D cesium map and the 2D open layers map.\r\n     */\r\n    const toggleDimension = () => {\r\n        cesiumMap.setEnabled(!cesiumMap.getEnabled());\r\n        iconRef.current.src = cesiumMap.getEnabled() ? twoDimensional : threeDimensional;\r\n    }\r\n\r\n    return (\r\n        <div className=\"control dimension-control\" onClick={() => toggleDimension()}>\r\n            <img ref={iconRef} className=\"layer-icon\" src={threeDimensional} alt=\"layer-icon\"/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default DimensionControl;","export default __webpack_public_path__ + \"static/media/cursor-info.07c4bd6e.webp\";","export default __webpack_public_path__ + \"static/media/cursor-info-active.ca97ab75.webp\";","import React, {useContext, useRef, useState} from \"react\";\r\nimport cursorIcon from \"../../resources/images/cursor-info.webp\";\r\nimport cursorIconActive from \"../../resources/images/cursor-info-active.webp\";\r\nimport MapContext from \"../Map/MapContext\";\r\n\r\n/**\r\n * Container for QueryLocation control\r\n * @returns {JSX.Element}\r\n */\r\nconst QueryLocationControl = () => {\r\n\r\n    const { setQueryable } = useContext(MapContext);\r\n\r\n    const iconRef = useRef();\r\n    const [controlActive, setControlActive] = useState(false);\r\n\r\n    /**\r\n     * Toggles the query feature\r\n     */\r\n    const toggleQueryPointer = () => {\r\n        setControlActive(!controlActive);\r\n        iconRef.current.src = controlActive ? cursorIconActive : cursorIcon;\r\n\r\n        setQueryable(controlActive);\r\n    }\r\n\r\n    return (\r\n        <div className=\"control query-location-control\" onClick={() => toggleQueryPointer()}>\r\n            <img ref={iconRef} className=\"query-location-control-icon\" src={cursorIcon} alt=\"cursor\"/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default QueryLocationControl;","import React, {useRef} from \"react\";\r\nimport ZoomControl from \"./Zoom\";\r\nimport LayerControl from \"./Layer\";\r\nimport DimensionControl from \"./DimensionControl\";\r\nimport QueryLocationControl from \"./QueryLocation\";\r\n\r\n/**\r\n * Container for custom OpenLayer controls\r\n * @returns {JSX.Element}\r\n */\r\nconst Controls = () => {\r\n    const controlBarRef = useRef();\r\n\r\n    return (\r\n        <div ref={controlBarRef} className=\"controls-bar\">\r\n            <LayerControl/>\r\n            <QueryLocationControl/>\r\n            <DimensionControl/>\r\n            <ZoomControl target={controlBarRef}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Controls;","export default __webpack_public_path__ + \"static/media/ncrp-logo-192x96.13b95eaf.webp\";","export default __webpack_public_path__ + \"static/media/ncrp-logo-205x103.92d85626.webp\";","export default __webpack_public_path__ + \"static/media/ncrp-logo-208x104.cf70d274.webp\";","export default __webpack_public_path__ + \"static/media/ncrp-logo-320x160.6c96ba48.webp\";","export default __webpack_public_path__ + \"static/media/ncrp-logo-600x300.b3f2289d.webp\";","import React from \"react\";\r\n\r\nimport logo192 from \"../resources/images/ncrp-logo-192x96.webp\"\r\nimport logo205 from \"../resources/images/ncrp-logo-205x103.webp\"\r\nimport logo208 from \"../resources/images/ncrp-logo-208x104.webp\"\r\nimport logo320 from \"../resources/images/ncrp-logo-320x160.webp\"\r\nimport logo600 from \"../resources/images/ncrp-logo-600x300.webp\"\r\n\r\n\r\n/**\r\n * Container for site logo\r\n * @remark The picture tag is used to support a wide variety of resolutions in both screen orientations\r\n * and the img tag is used as a fallback.\r\n * @returns {JSX.Element}\r\n */\r\nconst Logo = () => {\r\n\r\n    return <picture>\r\n                <source\r\n                    type=\"image/webp\"\r\n                    media=\"(orientation: landscape)\"\r\n                    srcSet={`${logo192} 192w`}\r\n                    sizes=\"(max-width: 800px) 192w, (max-width: 900px) 192w\"\r\n                />\r\n\r\n                <source\r\n                    type=\"image/webp\"\r\n                    media=\"(orientation: portrait)\"\r\n                    srcSet={`${logo192} 192w, ${logo205} 205w, ${logo208} 208w, ${logo320} 320w`}\r\n                    sizes=\"(max-width: 600px) 205px, (min-width: 600px) 208px, (min-width: 992px) 320px\"\r\n                />\r\n\r\n                <img src={logo600} className=\"app-logo\" alt=\"app-logo\"/>\r\n           </picture>\r\n}\r\n\r\nexport default Logo;","import React from \"react\";\r\n\r\n/**\r\n * Container for custom Footer\r\n * @param children The child components\r\n * @returns {JSX.Element}\r\n */\r\nconst Footer = () => {\r\n    return <footer>\r\n        <p className=\"footer__copyright-info\">© NCRP Contributors</p>\r\n    </footer>\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\n/**\r\n * Container for custom OpenLayer overlays\r\n * @param children The child components\r\n * @returns {JSX.Element}\r\n */\r\nconst Overlays = ({ children }) => {\r\n    return <div>{children}</div>;\r\n};\r\n\r\nexport default Overlays;","import { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {Overlay} from \"ol\";\r\nimport MapContext from \"../Map/MapContext\";\r\nimport {toLonLat} from \"ol/proj\";\r\n\r\n/**\r\n * Container for custom popup logic\r\n * @returns {{popupContent: JSX.Element, popupCloseButtonRef: React.MutableRefObject<undefined>, popupRef: React.MutableRefObject<undefined>}}\r\n */\r\nconst usePopup = (layerIndex=7) => {\r\n    const { map, isQueryable } = useContext(MapContext);\r\n    const popupRef = useRef();\r\n    const popupCloseButtonRef = useRef();\r\n    const [popupContent, setPopupContent] = useState(<div></div>);\r\n\r\n    /**\r\n     * Once the component is mounted onto the DOM, create the overlay and populate it via a click listener on the map.\r\n     * Add a click listener for the popup closer as well.\r\n     */\r\n    useEffect(() => {\r\n        if (!map)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let popupOverlay = new Overlay({\r\n            element: popupRef.current,\r\n            autoPan: true,\r\n            autoPanAnimation: { duration: 250 }\r\n        })\r\n\r\n        map.addOverlay(popupOverlay);\r\n\r\n        popupCloseButtonRef.current.onclick = () => {\r\n            popupOverlay.setPosition(undefined);\r\n            popupCloseButtonRef.current.blur();\r\n            return false;\r\n        };\r\n\r\n        map.on(\"singleclick\", function (event) {\r\n            if (!isQueryable)\r\n            {\r\n                return;\r\n            }\r\n\r\n            let projection = map.getView().getResolution();\r\n\r\n            let layers = map.getLayers();\r\n\r\n            let desiredLayer = layers.item(layerIndex);\r\n            let desiredLayerSource = desiredLayer.getSource();\r\n            let url = desiredLayerSource.getFeatureInfoUrl(event.coordinate, projection, \"EPSG:4326\", {\"INFO_FORMAT\": \"text/html\"});\r\n\r\n            // if (url)\r\n            // {\r\n            //    fetch(url)\r\n            //         .then((response) => response.text())\r\n            //        .then((data) => setPopupContent(<div>{data}</div>));\r\n            // }\r\n\r\n            const coordinate = event.coordinate;\r\n            const longLatInfo = toLonLat(coordinate);\r\n\r\n            setPopupContent(\r\n                <div>\r\n                    <p>You clicked here:</p>\r\n                    <code>Long: {longLatInfo[0]}</code>\r\n                    <br/>\r\n                    <code>Lat: {longLatInfo[1]}</code>\r\n                </div>\r\n            );\r\n\r\n            // setPopupContent(<div className={\"loader\"}></div>)\r\n\r\n\r\n\r\n            popupOverlay.setPosition(coordinate);\r\n        });\r\n\r\n        return () => {\r\n            if (map)\r\n            {\r\n                map.removeOverlay(popupOverlay);\r\n            }\r\n        };\r\n\r\n    }, [map, isQueryable]);\r\n\r\n    return { popupRef, popupCloseButtonRef, popupContent };\r\n};\r\n\r\nexport default usePopup;","import React from \"react\";\r\nimport usePopup from \"./usePopup\";\r\n\r\n/**\r\n * Container for OpenLayer custom popup.\r\n * @returns {JSX.Element}\r\n */\r\nconst Popup = () => {\r\n    const { popupRef, popupCloseButtonRef, popupContent } = usePopup();\r\n\r\n    return (\r\n        <div className=\"ol-popup\" ref={popupRef}>\r\n            <a href=\"#\" className=\"ol-popup__closeButton\" ref={popupCloseButtonRef}/>\r\n            <div className=\"ol-popup__content\">{popupContent}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;\r\n","import React, {useContext, useState} from 'react';\r\nimport \"./styles/main.css\";\r\n\r\nimport Map from \"./components/Map/Map\";\r\nimport Layers from \"./components/Layers/Layers\";\r\nimport TileLayer from \"./components/Layers/TileLayer\";\r\nimport Controls from \"./components/Controls/Controls\";\r\nimport Logo from \"./components/Logo\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport { OSM, BingMaps, Stamen, XYZ, TileWMS } from \"ol/source\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport Overlays from \"./components/Overlays/Overlays\";\r\nimport Popup from \"./components/Overlays/Popup\";\r\nimport SideMenu from \"./components/SideMenu\";\r\n\r\n/**\r\n * Component for the React applicaation\r\n * @returns {JSX.Element}\r\n */\r\nconst App = () => {\r\n    const washingtonCoordinates = [-122.29567670312974, 47.41311574557329];\r\n    const [center, setCenter] = useState(washingtonCoordinates);\r\n    const [zoom, setZoom] = useState(6);\r\n\r\n    const soilData = new TileWMS({\r\n        url: 'http://localhost:8080/geoserver/wms',\r\n        params: {'LAYERS': 'ncrp:soil-data', 'TILED': true},\r\n        serverType: 'geoserver',\r\n        transition: 0,\r\n    });\r\n\r\n    const waSlope = new TileWMS({\r\n        url: 'http://localhost:8080/geoserver/wms',\r\n        params: {'LAYERS': 'ncrp:wa_slope', 'TILED': true},\r\n        serverType: 'geoserver',\r\n        transition: 0,\r\n    });\r\n\r\n    const waFire = new TileWMS({\r\n        url: 'http://localhost:8080/geoserver/wms',\r\n        params: {'LAYERS': 'ncrp:wa_fire_history_low_dpi', 'TILED': true},\r\n        serverType: 'geoserver',\r\n        transition: 0,\r\n    });\r\n\r\n    const soilClasses = new TileWMS({\r\n        url: 'http://localhost:8080/geoserver/wms',\r\n        params: {'LAYERS': 'ncrp:soil_classes', 'TILED': true},\r\n        serverType: 'geoserver',\r\n        transition: 0,\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Logo />\r\n            <Map center={fromLonLat(center)} zoom={zoom}>\r\n                <Layers>\r\n                    <TileLayer source={new OSM()} zIndex={0} preload={Infinity} />\r\n                    <TileLayer source={new Stamen({layer: \"terrain\"})} zIndex={0} preload={Infinity} visible={false} />\r\n                    <TileLayer source={new Stamen({layer: \"toner\"})} zIndex={0} preload={Infinity} visible={false}/>\r\n                    <TileLayer source={new BingMaps({key: \"AjfTsiozBjJlt3OV1PIbHuGRaaUEtnvKXwc1qEpyAFLi_LLImirWTbks68MZ87Ve\", imagerySet: \"AerialWithLabelsOnDemand\"})} zIndex={0} preload={Infinity} visible={false}/>\r\n                    <TileLayer source={new XYZ({url: \"https://{a-c}.tile.opentopomap.org/{z}/{x}/{y}.png\"})} zIndex={0} preload={Infinity} visible={false}/>\r\n\r\n                    <TileLayer source={waSlope} zIndex={1} opacity={.6}/>\r\n                    <TileLayer source={waFire} zIndex={2} opacity={.3}/>\r\n                    <TileLayer source={soilData} zIndex={3}/>\r\n                </Layers>\r\n                <Overlays>\r\n                    <Popup />\r\n                </Overlays>\r\n                <SideMenu>\r\n                    <Controls/>\r\n                </SideMenu>\r\n            </Map>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}